<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:mx="library://ns.adobe.com/flex/mx"
		title="Categories"  creationComplete="init();">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		  <![CDATA[
			  import flash.data.SQLConnection;
			  import flash.data.SQLResult;
			  import flash.net.Responder;		
			  import mx.collections.ArrayCollection;
			  import mx.core.FlexGlobals;
			  import mx.utils.ObjectProxy;
			  import views.scripts.Model;
			  
			  private var connection:SQLConnection;
			  private var model:Model = Model.getInstance();
			  
			  [Bindable]
			  private var listData:ArrayCollection;
			  
			  private function init():void{		
				  selectItems();
			  }
			  private function selectItems():void{
				  model.getCategories().selectItems(new Responder(onSelected));
			  }
			  
			  //-------------------------------------------------------------------------
			  private function onSelected(evt:SQLResult):void {
				  listData = new ArrayCollection(evt.data);
			  }
			  private function getFullName(evt:Object):String{
				  return evt.catname;
			  }
			  private function doNew():void {
				  model.categoriesStatus["operation"] = "New";
				  navigator.pushView(CategoriesEdit);
			  }
			  private function doEdit():void {
				  model.categoriesStatus["operation"] = "Edit";
				  var tmpObj:ObjectProxy = new ObjectProxy();
				  tmpObj.id_category = categoriesList.selectedItem.id;
				  tmpObj.catname = categoriesList.selectedItem.catname;
				  navigator.pushView(CategoriesEdit, tmpObj);
			  }
			  private function doSelect():void {
			  
				  model.categoryColumn['fkcatname'] = categoriesList.selectedItem.catname;
				  navigator.popView();
				  
				  /*if(data){
					  data.fkcatname = categoriesList.selectedItem.catname;
					  navigator.pushView(IngredientEdit, data);
				  }else{
					  var tmpObj:ObjectProxy = new ObjectProxy();
					  tmpObj.fkcatname = categoriesList.selectedItem.catname;
					  navigator.pushView(IngredientEdit, data);
				  }*/
			  }
			  private function doDelete():void {
				  var obj:Object = new Object();
				  obj["@id_category"] = categoriesList.selectedItem.id;
				  model.getCategories().Delete(obj);
				  navigator.pushView(Categories);
			  }
			  
			  
		  ]]>
	  </fx:Script>
	<s:VGroup left="2" top="2">
		<s:Button id="b_new" label="Add" click="doNew()" />
		<s:List width="316" height="360" horizontalCenter="0" verticalCenter="0"
				id="categoriesList"
				dataProvider="{listData}"
				labelFunction="getFullName"
				fontSize="9" click="mx.core.FlexGlobals.topLevelApplication.viewMenuOpen=true;">
		</s:List>
	</s:VGroup>
	
	<s:viewMenuItems>
		<s:ViewMenuItem id="b_edit" label="Edit" click="doEdit();"/>
		<s:ViewMenuItem id="b_select" label="Select" click="doSelect();"/>
		<s:ViewMenuItem id="b_delete" label="Delete" click="doDelete();"/>
	</s:viewMenuItems>
</s:View>
