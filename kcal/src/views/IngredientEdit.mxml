<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:mx="library://ns.adobe.com/flex/mx"
		title="Ingredients">
	<fx:Script>
		<![CDATA[
			import flash.data.SQLConnection;
			import flash.data.SQLResult;
			import flash.net.Responder;
			
			import mx.validators.Validator;
			
			import views.scripts.Ingredients;
			import views.scripts.Model;
			
			private var connection:SQLConnection;
			[Bindable]
			private var ingredients:views.scripts.Ingredients = Model.getInstance().getIngredients();
			[Bindable]
			private var category:views.scripts.Categories = Model.getInstance().getCategories();
			[Bindable]
			private var units:views.scripts.Units = Model.getInstance().getUnits();
		
			
			//-----------------------------------------------------------------
			private function onSave():void {
				if(fieldsCheck()){				
					var obj:Object = new Object();
					if(ingredients.status.operation == 'New'){
						obj["@ingname"] = t_ingname.text;
						obj["@fkcatname"] = t_fkcatname.text;
						obj["@fkunitname"] = t_fkunitname.text;
						obj["@unitkcal"] = t_unitkcal.text;
						ingredients.Create(obj, new Responder(fatto));
					}else{
						obj["@id_ingredient"] = ingredients.id;
						obj["@ingname"] = t_ingname.text;
						obj["@fkcatname"] = t_fkcatname.text;
						obj["@fkunitname"] = t_fkunitname.text;
						obj["@unitkcal"] = t_unitkcal.text;
						ingredients.Update(obj, new Responder(fatto));
					}
				}
			}
			private function fatto(evt:SQLResult):void{
				navigator.popView();
			}
			private function clearFields():void {
				t_ingname.text = t_fkcatname.text = t_fkunitname.text = t_unitkcal.text = "";
			}			
			private function fieldsCheck():Boolean {
				var validatorErrors:Array = Validator.validateAll(nameValidators);
				if (validatorErrors.length > 0) {
					trace("You have to fill name and description field!", "Oops!");
					return false;
				}else{
					return true;
				}
			}
			private function selectCategory(event:FocusEvent):void{
				navigator.pushView(CategoriesView);
			}
			private function selectUnit(event:FocusEvent):void{
				navigator.pushView(UnitsView);
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<fx:Array id="nameValidators">
			<mx:StringValidator source="{t_ingname}" property="text" required="true" />
			<mx:StringValidator source="{t_fkcatname}" property="text" required="true" />
			<mx:StringValidator source="{t_fkunitname}" property="text" required="true" />
			<mx:StringValidator source="{t_unitkcal}" property="text" required="true" />
		</fx:Array>
	</fx:Declarations>
	<s:VGroup left="2" top="2">
		<s:Label styleName="title" text="{ingredients.status.operation + ' Ingredient'}"/>
		<s:HGroup><s:Label text="Category"/><s:TextInput id="t_fkcatname" text="@{ingredients.fkcatname}" focusIn="selectCategory(event)" width="250"/></s:HGroup>
		<s:HGroup><s:Label text="Name"/><s:TextInput id="t_ingname" text="@{ingredients.ingname}" width="250"/></s:HGroup>
		<s:HGroup><s:Label text="Unit"/><s:TextInput id="t_fkunitname" text="@{ingredients.fkunitname}" focusIn="selectUnit(event)" width="50"/></s:HGroup>
		<s:HGroup><s:Label text="Kcal/Unit"/><s:TextInput id="t_unitkcal" text="@{ingredients.unitkcal}" width="100"/></s:HGroup>
		<s:HGroup>
			<s:Button id="b_save" label="Save changes" click="onSave();" />
			<s:Button id="b_clear" label="Clear" click="clearFields();" />
		</s:HGroup>
	</s:VGroup>
</s:View>
