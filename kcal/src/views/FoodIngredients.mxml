<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:mx="library://ns.adobe.com/flex/mx"
		title="Diary" creationComplete="init();">
	<fx:Script>
		<![CDATA[
			import flash.data.SQLConnection;
			import flash.data.SQLResult;
			import flash.net.Responder;			
			import mx.validators.Validator;
			import views.scripts.Model;
			
			private var connection:SQLConnection;
			
			[Bindable]
			private var model:Model = Model.getInstance();
			
			private function init():void{		
				model = Model.getInstance();
			}
			
			//------------------------------------------------------------------------
			private function onSave():void {
				if(fieldsCheck()){				
					var obj:Object = new Object();
					if(model.foodingredientsStatus['operation'] == 'New'){
						obj["@fname"] = t_fname.text;
						obj["@fingredient"] = t_fingredient.text;
						obj["@fquantity"] = t_fquantity.text;
						obj["@fsumm"] = Number(t_fsumm.text);
					
						model.getFoodingredients().Create(obj, new Responder(fatto));
					}else{
						//obj["@id_foodingredient"] = model.unitColumn['id'];
						obj["@fname"] = t_fname.text;
						obj["@fingredient"] = t_fingredient.text;
						obj["@fquantity"] = t_fquantity.text;
						obj["@fsumm"] = Number(t_fsumm.text);

						model.getFoodingredients().Update(obj, new Responder(fatto));
					}
				}
			}
			private function selectFood(event:FocusEvent):void{
				navigator.pushView(Food);
			}
			private function selectIngredient(event:FocusEvent):void{
				navigator.pushView(IngredientsView);
			}
			private function fatto(evt:SQLResult):void{
				navigator.pushView(FoodIngredients);
			}
			private function clearFields():void {
				t_fname.text = t_fingredient.text = t_fquantity.text = "";
			}			
			private function fieldsCheck():Boolean {
				var validatorErrors:Array = Validator.validateAll(nameValidators);
				if (validatorErrors.length > 0) {
					trace("You have to fill name and description field!", "Oops!");
					return false;
				}else{
					return true; 
				}
			}
			protected function summKcal(event:FocusEvent):void{
				//t_fsumm.text = String(Number(t_fquantity.text) * Number(model.ingredientColumn['unitkcal']));			
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<fx:Array id="nameValidators">
			<mx:StringValidator source="{t_fname}" property="dateItemList" required="true" />
			<mx:StringValidator source="{t_fingredient}" property="text" required="true" />
			<mx:StringValidator source="{t_fquantity}" property="text" required="true" />
			<mx:StringValidator source="{t_fsumm}" property="text" required="true" />
		</fx:Array>
	</fx:Declarations>
	<s:VGroup>	
		<s:Label styleName="title" text="{model.foodingredientsColumn['fname'] + ' add ingredients'}" />
		<s:HGroup><s:Label text="Food"/><s:TextInput id="t_fname" text="{model.foodingredientsColumn['fname']}" width="250" focusIn="selectFood(event)" /></s:HGroup>
		<s:HGroup><s:Label text="Ingr."/><s:TextInput id="t_fingredient" text="{model.foodingredientsColumn['fingredient']}" width="250" focusIn="selectIngredient(event)" /></s:HGroup>
		<s:HGroup><s:Label text="Quant."/><s:TextInput id="t_fquantity" text="{model.foodingredientsColumn['fquantity']}" width="100" focusOut="summKcal(event)"/></s:HGroup>
		<s:HGroup><s:Label text="Summ"/><s:TextInput id="t_fsumm" text="{model.foodingredientsColumn['fsumm']}" width="100"/></s:HGroup>
		<s:HGroup>
			<s:Button x="2" id="b_save" label="Save changes" click="onSave();" />
			<s:Button id="b_clear" label="Clear" click="clearFields();" />
		</s:HGroup>
	</s:VGroup>
</s:View>
