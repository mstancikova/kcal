<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:mx="library://ns.adobe.com/flex/mx"
		title="Ingredients"  creationComplete="init();">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flash.data.SQLConnection;
			import flash.data.SQLMode;
			import flash.data.SQLResult;
			import flash.data.SQLStatement;
			import flash.events.SQLEvent;
			import flash.filesystem.File;
			import flash.net.Responder;
			
			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			import mx.utils.ObjectProxy;
			
			private var connection:SQLConnection;
			
			[Bindable]
			private var listData:ArrayCollection;
			
			private function init():void{
				var dbFile:File = File.applicationDirectory.resolvePath("db/kcal_01.db");
				var dbWorkFile:File = File.documentsDirectory.resolvePath("kcal_01.db");
				//var dbFile:File = File.applicationStorageDirectory.resolvePath("kcal_01.db");
				connection = new SQLConnection();
				connection.addEventListener(SQLEvent.OPEN, onOpen);
				connection.openAsync(dbFile, SQLMode.CREATE);
				
				/*if(data){
					trace("fromView: " + data.fromView);
					if(data.fromView == "DN" || data.fromView == "D-DN" || data.fromView == "D-DN-I-IE"){
						b_select.enabled = true;
					}
				}*/
				
			}
			protected function onError(event:SQLErrorEvent):void{
				trace(event.text);
			}
			
			private function onOpen(evt:SQLEvent):void{
				var stat:SQLStatement = new SQLStatement();
				stat.sqlConnection = connection;
				stat.text = "CREATE TABLE IF NOT EXISTS INGREDIENT (id INTEGER PRIMARY KEY AUTOINCREMENT, ingname TEXT, fkcatname TEXT, fkunitname TEXT, unitkcal DECIMAL(5, 2))";
				connection.addEventListener(SQLErrorEvent.ERROR, onError);
				stat.execute(-1, new Responder(selectItems));
			}
			private function selectItems(evt:SQLResult):void{
				var stat:SQLStatement = new SQLStatement();
				stat.sqlConnection = connection;
				stat.text = "SELECT * FROM INGREDIENT ORDER BY ingname";
				connection.addEventListener(SQLErrorEvent.ERROR, onError);
				stat.execute( -1, new Responder(onSelected));
			}
			private function onSelected(evt:SQLResult):void {
				listData = new ArrayCollection(evt.data);
			}
			private function getFullName(evt:Object):String{
				return evt.ingname;
			}
			
			private function doNew():void {
				var tmpObj:ObjectProxy = new ObjectProxy();
				tmpObj.fromView = "I";
				navigator.pushView(IngredientNew);
			}
			private function doEdit():void {
				var tmpObj:ObjectProxy = new ObjectProxy();
				tmpObj.id_ingredient = ingredientsList.selectedItem.id;
				tmpObj.ingname = ingredientsList.selectedItem.ingname;
				tmpObj.fkcatname = ingredientsList.selectedItem.fkcatname;
				tmpObj.fkunitname = ingredientsList.selectedItem.fkunitname;
				tmpObj.unitkcal = ingredientsList.selectedItem.unitkcal;
				tmpObj.fromView = "I";
				if(data){
					if(data.fromView == "D-DN"){
						tmpObj.fromView = "D-DN-I";
					}
				}
				navigator.pushView(IngredientEdit, tmpObj);
			}
			private function doSelect():void {
				if(data){
					data.dwhat = ingredientsList.selectedItem.ingname;
					data.iunitkcal = ingredientsList.selectedItem.unitkcal;
					data.unitname = ingredientsList.selectedItem.fkunitname;
					data.fromView = "D-DN-I";
					navigator.pushView(DiaryNew, data);
				}
			}
			private function doDelete():void {
				var stat:SQLStatement = new SQLStatement();
				stat.sqlConnection = connection;
				stat.text = "DELETE FROM INGREDIENT WHERE id=" + ingredientsList.selectedItem.id;
				stat.execute( -1, new Responder(selectItems));
			}
			
		]]>
	</fx:Script>

	<s:VGroup left="2" top="2">
		<s:Button id="b_new" label="Add" click="doNew()" />
		<s:List width="316" height="360" horizontalCenter="0" verticalCenter="0"
				id="ingredientsList"
				dataProvider="{listData}"
				labelFunction="getFullName"
				fontSize="9" click="mx.core.FlexGlobals.topLevelApplication.viewMenuOpen=true;">
		</s:List>
	</s:VGroup>
	
	<s:viewMenuItems>
		<s:ViewMenuItem id="b_edit" label="Edit" click="doEdit();"/>
		<s:ViewMenuItem id="b_select" label="Select" click="doSelect();"/>
		<s:ViewMenuItem id="b_delete" label="Delete" click="doDelete();"/>
	</s:viewMenuItems>
</s:View>
