<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:mx="library://ns.adobe.com/flex/mx"
		title="Ingredients"  creationComplete="init();">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flash.data.SQLConnection;
			import flash.data.SQLResult;
			import flash.net.Responder;
			
			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			
			import views.scripts.Model;
			
			private var connection:SQLConnection;
			private var model:Model = Model.getInstance();
			
			[Bindable]
			private var listData:ArrayCollection;
			[Bindable]
			private var listCats:ArrayCollection;
			
			private function init():void{		
				selectItems();
				selectCategories();
			}
			private function selectItems():void{
				model.getIngredients().selectItems(new Responder(onSelected));
			}
			//per la lista categories per dropdown list
			private function selectCategories():void{
				model.getCategories().selectItems(new Responder(onSelectedCat));
			}
			
			//------------------------------------------------------------------------
			//lista ingredients
			private function onSelected(evt:SQLResult):void {
				listData = new ArrayCollection(evt.data);
			}
			private function getFullName(evt:Object):String{
				return evt.ingname;
			}
			//per la lista categories per dropdown list
			private function onSelectedCat(evt:SQLResult):void {
				listCats = new ArrayCollection(evt.data);
			}
			private function getCatName(evt:Object):String{
				return evt.catname;
			}
			private function doNew():void {
				model.ingredientStatus["operation"] = "New";
				navigator.pushView(IngredientEdit);
			}
			private function doEdit():void {
				model.ingredientStatus["operation"] = "Edit";
				model.ingredientColumn['id'] = ingredientsList.selectedItem.id;
				model.ingredientColumn['ingname'] = ingredientsList.selectedItem.ingname;
				model.categoryColumn['fkcatname'] = ingredientsList.selectedItem.fkcatname;
				model.unitColumn['fkunitname'] = ingredientsList.selectedItem.fkunitname;
				model.ingredientColumn['unitkcal'] = ingredientsList.selectedItem.unitkcal;
				navigator.pushView(IngredientEdit);
			}
			private function doSelect():void {
				model.diaryColumn['dwhat'] = ingredientsList.selectedItem.ingname;
				model.unitColumn['fkunitname'] = ingredientsList.selectedItem.fkunitname;
				model.ingredientColumn['unitkcal'] = ingredientsList.selectedItem.unitkcal;
				navigator.popView();
			}
			private function doDelete():void {
				var obj:Object = new Object();
				obj["@id_ingredient"] = ingredientsList.selectedItem.id;
				model.getIngredients().Delete(obj);
				navigator.pushView(Ingredients);
			}
			protected function dropdownList_chengeHandler(event:Event):void
			{
				//trace(categorySpinner.selectedItem.catname);
				var obj:Object = new Object();
				obj["@catfilter"] = categorySpinner.selectedItem.catname;
				model.getIngredients().selectByCategory(obj, new Responder(onSelected));
			}
			
		]]>
	</fx:Script>
	<s:VGroup left="2" top="2">
		<s:SpinnerListContainer horizontalCenter="0" width="100%" top="5" bottom="5">
			<s:SpinnerList id="categorySpinner" textAlign="center" width="100%" dataProvider="{listCats}" labelField="catname"
						   change="dropdownList_chengeHandler(event)"></s:SpinnerList> 
		</s:SpinnerListContainer>
		<s:List width="316" height="280" horizontalCenter="0" verticalCenter="0"
				id="ingredientsList"
				dataProvider="{listData}"
				labelFunction="getFullName"
				fontSize="9" click="mx.core.FlexGlobals.topLevelApplication.viewMenuOpen=true;">
		</s:List>
	</s:VGroup>
	
	<s:viewMenuItems>
		<s:ViewMenuItem id="b_edit" label="Edit" click="doEdit();"/>
		<s:ViewMenuItem id="b_select" label="Select" click="doSelect();"/>
		<s:ViewMenuItem id="b_delete" label="Delete" click="doDelete();"/>
	</s:viewMenuItems>
	
	<s:navigationContent>
	<s:Button label="&lt;&lt;" click="navigator.popView();"/>
	</s:navigationContent>
	<s:actionContent>
		<s:Button label="+" click="doNew();"/>
	</s:actionContent>    
</s:View>
